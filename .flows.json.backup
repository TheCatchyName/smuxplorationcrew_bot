[
    {
        "id": "ce49487b198a0e71",
        "type": "tab",
        "label": "SMUX Bot",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e9698b316b6bbdbc",
        "type": "chatbot-telegram-node",
        "botname": "smuxplorationcrew_bot",
        "usernames": "",
        "token": "2032795926:AAGa2NGH8DqdA0QRepMmnlFGr7kau3ZIvWM",
        "providerToken": "",
        "polling": "1000",
        "store": "",
        "log": "",
        "debug": false,
        "webHook": "",
        "connectMode": "polling"
    },
    {
        "id": "10cb1b39c1f5f855",
        "type": "airtable",
        "name": "SMUX DBMS V2"
    },
    {
        "id": "0566fc6538882ac0",
        "type": "chatbot-telegram-receive",
        "z": "ce49487b198a0e71",
        "bot": "e9698b316b6bbdbc",
        "botProduction": "",
        "x": 90,
        "y": 1120,
        "wires": [
            [
                "b73fad9b9285ce66",
                "ad489de7409c5700",
                "923d9741b3036dad"
            ]
        ]
    },
    {
        "id": "9044bea29df53131",
        "type": "chatbot-telegram-send",
        "z": "ce49487b198a0e71",
        "bot": "e9698b316b6bbdbc",
        "botProduction": "",
        "track": true,
        "passThrough": false,
        "errorOutput": false,
        "outputs": 1,
        "x": 2570,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "31f82aa861a8540e",
        "type": "chatbot-rules",
        "z": "ce49487b198a0e71",
        "name": "Message filter",
        "rules": [
            {
                "type": "command",
                "command": "/help"
            },
            {
                "type": "command",
                "command": "/start"
            },
            {
                "type": "command",
                "command": "/update"
            },
            {
                "type": "command",
                "command": "/faq"
            },
            {
                "type": "command",
                "command": "/pdpa"
            },
            {
                "type": "command",
                "command": "/bikingproficiency"
            },
            {
                "type": "command",
                "command": "/kayakingproficiency"
            },
            {
                "type": "command",
                "command": "/skatingproficiency"
            },
            {
                "type": "command",
                "command": "/waterproficiency"
            },
            {
                "type": "command",
                "command": "/proficiencies"
            },
            {
                "type": "catchAll"
            }
        ],
        "outputs": 11,
        "x": 760,
        "y": 1120,
        "wires": [
            [
                "eb56112bb03d76e0"
            ],
            [
                "044e02b5716b9bc8"
            ],
            [
                "ce361261702884fa"
            ],
            [
                "27e8c28d0a3f8769"
            ],
            [
                "23af18058270dfac"
            ],
            [
                "ce53d75e5c19b459"
            ],
            [
                "dabef4d0f7056c6f"
            ],
            [
                "8d39d8edbcf5a4cf"
            ],
            [
                "a798e93020901278"
            ],
            [
                "8d670304e47861ec"
            ],
            [
                "f900e418a189560b"
            ]
        ]
    },
    {
        "id": "9e0175732c29d964",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "/start",
        "info": "",
        "x": 950,
        "y": 420,
        "wires": []
    },
    {
        "id": "92cd7d957fadcf99",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "commands message",
        "message": [
            {
                "message": "Please use the following commands:\n/update - view and update your personal particulars\n/join - sign up for an activity/view activities\n/faq - view frequently asked questions\n/proficiencies - view/update your skill proficiencies\n/refresh - refreshes the bot if your changes are not reflected"
            }
        ],
        "language": "none",
        "x": 1060,
        "y": 360,
        "wires": [
            [
                "de1435846f9f8f91"
            ]
        ]
    },
    {
        "id": "70edde6cc4eafec7",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "for joining activities",
        "info": "",
        "x": 990,
        "y": 620,
        "wires": []
    },
    {
        "id": "044e02b5716b9bc8",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "/start",
        "links": [
            "b2cc1fd8d4ac46ab"
        ],
        "x": 1035,
        "y": 960,
        "wires": []
    },
    {
        "id": "1daeaacca532cc6d",
        "type": "link in",
        "z": "ce49487b198a0e71",
        "name": "commands message",
        "links": [
            "594ed82c6fe11e42",
            "eb56112bb03d76e0",
            "c65dc10d572c8628",
            "3a68be5fa9c1e998"
        ],
        "x": 915,
        "y": 360,
        "wires": [
            [
                "92cd7d957fadcf99"
            ]
        ]
    },
    {
        "id": "eb56112bb03d76e0",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "/help",
        "links": [
            "1daeaacca532cc6d"
        ],
        "x": 1035,
        "y": 920,
        "wires": []
    },
    {
        "id": "50110548e3f9978a",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "/help",
        "info": "",
        "x": 950,
        "y": 320,
        "wires": []
    },
    {
        "id": "463c186ae99ad92f",
        "type": "airtable out",
        "z": "ce49487b198a0e71",
        "airtable": "10cb1b39c1f5f855",
        "operation": "select",
        "outputType": "array",
        "table": "Members",
        "name": "Get user record",
        "x": 1240,
        "y": 560,
        "wires": [
            [
                "80dfbc49e688e4ab"
            ]
        ]
    },
    {
        "id": "91bcf240ec8cce21",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "userId to record",
        "func": "var userId = msg.originalMessage.from.id;\nmsg.payload = {\"fields\":[\"update link\"], \"filterByFormula\":\"{utid}='\"+userId+\"'\"};\n//make sure that only 1 is returned: the original record, where toUpdate is blank\n// msg.payload = {\"fields\":[\"update link\"], \"filterByFormula\":\"AND({toUpdate} = '', {utid}='\"+userId+\"')\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 560,
        "wires": [
            [
                "463c186ae99ad92f"
            ]
        ]
    },
    {
        "id": "0a44eebc4f433a0c",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "/update",
        "info": "",
        "x": 950,
        "y": 520,
        "wires": []
    },
    {
        "id": "abc8572403e98d18",
        "type": "link in",
        "z": "ce49487b198a0e71",
        "name": "update",
        "links": [
            "ce361261702884fa"
        ],
        "x": 915,
        "y": 560,
        "wires": [
            [
                "91bcf240ec8cce21"
            ]
        ]
    },
    {
        "id": "ce361261702884fa",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "/update",
        "links": [
            "abc8572403e98d18"
        ],
        "x": 1035,
        "y": 1000,
        "wires": []
    },
    {
        "id": "80dfbc49e688e4ab",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "get update link",
        "func": "if (msg.payload.length != 0) {\n    msg.userData = msg.payload[0];\n    msg.newUser = false;\n} else {\n    msg.newUser = true;\n}\n\nmsg.updateLink = JSON.stringify(msg.userData.fields).split(\"\\\"\")[3];\n// console.log(msg.updateLink)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 560,
        "wires": [
            [
                "67886e47295156fc"
            ]
        ]
    },
    {
        "id": "67886e47295156fc",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "placeholder",
        "message": [
            {
                "message": "placeholder"
            }
        ],
        "language": "none",
        "x": 1610,
        "y": 560,
        "wires": [
            [
                "72dc836e8b9d1f07",
                "52f93ed66f837356"
            ]
        ]
    },
    {
        "id": "c61e4ab1bf95a764",
        "type": "link in",
        "z": "ce49487b198a0e71",
        "name": "tele endpoint sender",
        "links": [
            "90f9d347aa5d13d3",
            "de1435846f9f8f91",
            "9b9e6c23a802d445",
            "779668e31c92bef0",
            "2d3efe6758e51dbe",
            "687f5203d955bd74",
            "125a40fc3e097a6a",
            "14e144e49a67babb",
            "019ec0e431a666d9",
            "a034d2a7a9b895bb",
            "ac436316bf0fcf4b",
            "475a66b7c8dcc45f",
            "dd010f3519030b67"
        ],
        "x": 2435,
        "y": 480,
        "wires": [
            [
                "9044bea29df53131"
            ]
        ]
    },
    {
        "id": "de1435846f9f8f91",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "commands end point",
        "links": [
            "c61e4ab1bf95a764"
        ],
        "x": 1195,
        "y": 360,
        "wires": []
    },
    {
        "id": "9b9e6c23a802d445",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "update endpoint",
        "links": [
            "c61e4ab1bf95a764"
        ],
        "x": 2095,
        "y": 560,
        "wires": []
    },
    {
        "id": "72dc836e8b9d1f07",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "craft message",
        "func": "msg.payload.content = \"[Tap here](\" + msg.updateLink + \") to update your personal particulars.\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 560,
        "wires": [
            [
                "c6c298227fc184ef"
            ]
        ]
    },
    {
        "id": "c6c298227fc184ef",
        "type": "chatbot-params",
        "z": "ce49487b198a0e71",
        "name": "add markdown",
        "params": [
            {
                "platform": "telegram",
                "name": "parseMode",
                "value": "Markdown"
            },
            {
                "platform": "telegram",
                "name": "disableWebPagePreview",
                "value": true
            }
        ],
        "outputs": 1,
        "x": 1980,
        "y": 560,
        "wires": [
            [
                "9b9e6c23a802d445"
            ]
        ]
    },
    {
        "id": "52f93ed66f837356",
        "type": "debug",
        "z": "ce49487b198a0e71",
        "name": "here!",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 520,
        "wires": []
    },
    {
        "id": "85c767cfb96dbe77",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "command processing",
        "func": "//takes any commands and splits it to command and params\nmsg.userId = msg.payload.chatId;\nmsg.commandParams = null;\nmsg.command = msg.payload.content.split(\"_\")[0];\nmsg.commandParams = msg.payload.content.split(\"_\")[1];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 680,
        "wires": [
            [
                "3e3d8c1f17c6c8f5"
            ]
        ]
    },
    {
        "id": "91e29d19fd7aae79",
        "type": "link in",
        "z": "ce49487b198a0e71",
        "name": "command processing out",
        "links": [
            "f900e418a189560b"
        ],
        "x": 915,
        "y": 680,
        "wires": [
            [
                "85c767cfb96dbe77"
            ]
        ]
    },
    {
        "id": "f900e418a189560b",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "all other inputs",
        "links": [
            "91e29d19fd7aae79"
        ],
        "x": 1035,
        "y": 1320,
        "wires": []
    },
    {
        "id": "c45f832c9d0ac1c7",
        "type": "switch",
        "z": "ce49487b198a0e71",
        "name": "not found/open/closed",
        "property": "activityStatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": true,
        "outputs": 3,
        "x": 1600,
        "y": 660,
        "wires": [
            [
                "3a546e1123ecfdbc"
            ],
            [
                "349dfde6d20d6325"
            ],
            [
                "061daa0343dc4fa1"
            ]
        ]
    },
    {
        "id": "3e3d8c1f17c6c8f5",
        "type": "switch",
        "z": "ce49487b198a0e71",
        "name": "is join?",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/join",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1240,
        "y": 680,
        "wires": [
            [
                "32c2d1b05d2ded3e"
            ],
            [
                "c65dc10d572c8628"
            ]
        ]
    },
    {
        "id": "c65dc10d572c8628",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "all other commands",
        "links": [
            "1daeaacca532cc6d"
        ],
        "x": 1355,
        "y": 700,
        "wires": []
    },
    {
        "id": "3a546e1123ecfdbc",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "no activity found",
        "message": [
            {
                "message": ""
            }
        ],
        "language": "none",
        "x": 2000,
        "y": 880,
        "wires": [
            [
                "b948cec75df325d1"
            ]
        ]
    },
    {
        "id": "2d3efe6758e51dbe",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "out",
        "links": [
            "c61e4ab1bf95a764"
        ],
        "x": 2695,
        "y": 880,
        "wires": []
    },
    {
        "id": "687f5203d955bd74",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "update endpoint",
        "links": [
            "c61e4ab1bf95a764"
        ],
        "x": 2995,
        "y": 1020,
        "wires": []
    },
    {
        "id": "27e8c28d0a3f8769",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "/faq",
        "links": [
            "467d684e60116a18"
        ],
        "x": 1035,
        "y": 1040,
        "wires": []
    },
    {
        "id": "467d684e60116a18",
        "type": "link in",
        "z": "ce49487b198a0e71",
        "name": "",
        "links": [
            "27e8c28d0a3f8769"
        ],
        "x": 915,
        "y": 780,
        "wires": [
            [
                "ee33699e70bc30d6"
            ]
        ]
    },
    {
        "id": "4969f7a7024c72bf",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "/faq",
        "info": "",
        "x": 950,
        "y": 740,
        "wires": []
    },
    {
        "id": "ee33699e70bc30d6",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "faq message",
        "message": [
            {
                "message": "*How do I withdraw from an activity?*\nPlease contact an exco member from the respective team to withdraw from an activity.\n\n*Why can't I sign up for an activity?*\nIf you see a proficiency command, it means that you have to indicate your skill proficiency declaration first before signing up. If you've already done so and still can't sign up, try using /refresh then /join again.\n\n*PDPA Information*\n/pdpa\n\n*Something's broken!*\nContact @marcusgohsh for any further questions about this bot and its usage, or if you spot a bug :ladybug:."
            }
        ],
        "language": "none",
        "x": 1030,
        "y": 780,
        "wires": [
            [
                "46f69ca564cfac08"
            ]
        ]
    },
    {
        "id": "45cec1b408e03885",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "pdpa message",
        "message": [
            {
                "message": "By using this Telegram Bot, you agree that Singapore Management University (SMU) as represented by SMUXploration Crew, may collect, use and disclose your personal data that you provide in this Telegram Bot for the following purpose(s): i) Administrative and safety matters regarding your participation all SMUXploration Crew activities.\n\nYou also consent to the disclosure of the personal data provided by you in this Telegram Bot, to SMU’s partners or affiliates and other third party service providers that SMU may engage from time to time. If any of the personal data provided by you through this Telegram Bot is disclosed to SMU’s partners or affiliates, and/or third party service providers, SMU will ensure that the disclosure is in accordance with the PDPA.\n\nIf you wish to find out more about SMU’s personal data protection policy, please view SMU’s Personal Data Protection Statement at http://www.smu.edu.sg/personal-data-protection. Should you wish at any time to withdraw your consent for the collection, use, and/or disclosure of your personal data after submitting using this Telegram Bot, please contact us at xplorationcrew@sa.smu.edu.sg ."
            }
        ],
        "language": "none",
        "x": 1040,
        "y": 880,
        "wires": [
            [
                "14e144e49a67babb"
            ]
        ]
    },
    {
        "id": "88aedec08e41d3a0",
        "type": "link in",
        "z": "ce49487b198a0e71",
        "name": "",
        "links": [
            "23af18058270dfac"
        ],
        "x": 915,
        "y": 880,
        "wires": [
            [
                "45cec1b408e03885"
            ]
        ]
    },
    {
        "id": "037dcae985927af2",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "/pdpa",
        "info": "",
        "x": 950,
        "y": 840,
        "wires": []
    },
    {
        "id": "23af18058270dfac",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "/pdpa",
        "links": [
            "88aedec08e41d3a0"
        ],
        "x": 1035,
        "y": 1080,
        "wires": []
    },
    {
        "id": "125a40fc3e097a6a",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "",
        "links": [
            "c61e4ab1bf95a764"
        ],
        "x": 1315,
        "y": 780,
        "wires": []
    },
    {
        "id": "14e144e49a67babb",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "",
        "links": [
            "c61e4ab1bf95a764"
        ],
        "x": 1155,
        "y": 880,
        "wires": []
    },
    {
        "id": "46f69ca564cfac08",
        "type": "chatbot-params",
        "z": "ce49487b198a0e71",
        "name": "add markdown",
        "params": [
            {
                "platform": "telegram",
                "name": "parseMode",
                "value": "Markdown"
            },
            {
                "platform": "telegram",
                "name": "disableWebPagePreview",
                "value": true
            }
        ],
        "outputs": 1,
        "x": 1200,
        "y": 780,
        "wires": [
            [
                "125a40fc3e097a6a"
            ]
        ]
    },
    {
        "id": "335b66ba412a5f20",
        "type": "inject",
        "z": "ce49487b198a0e71",
        "name": "initialise",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"fields\":[\"utid\", \"Full Name\"],\"filterByFormula\":\"NOT({utid} = '')\"}",
        "payloadType": "json",
        "x": 260,
        "y": 100,
        "wires": [
            [
                "eef2b59f7ba25957"
            ]
        ]
    },
    {
        "id": "ac31d37f1a61177e",
        "type": "airtable out",
        "z": "ce49487b198a0e71",
        "airtable": "10cb1b39c1f5f855",
        "operation": "select",
        "outputType": "array",
        "table": "Members",
        "name": "Get user record",
        "x": 620,
        "y": 100,
        "wires": [
            [
                "8192fc288fc86244",
                "65e0990d94726676"
            ]
        ]
    },
    {
        "id": "65e0990d94726676",
        "type": "debug",
        "z": "ce49487b198a0e71",
        "name": "bar",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 200,
        "wires": []
    },
    {
        "id": "489c627c1c437231",
        "type": "change",
        "z": "ce49487b198a0e71",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pairs",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 100,
        "wires": [
            [
                "0fd49c35706f9d78"
            ]
        ]
    },
    {
        "id": "0fd49c35706f9d78",
        "type": "debug",
        "z": "ce49487b198a0e71",
        "name": "view flow.pairs",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 100,
        "wires": []
    },
    {
        "id": "015ea5e5b8761995",
        "type": "link in",
        "z": "ce49487b198a0e71",
        "name": "trigger memory refresh",
        "links": [
            "51aecabab784a917",
            "e887996eceb1d8c0",
            "8e05c31296168a5b",
            "21cb81522cf4875f"
        ],
        "x": 55,
        "y": 180,
        "wires": [
            [
                "4ad2bac77468db4e"
            ]
        ]
    },
    {
        "id": "cff5a92424e861fd",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "findutid in pairs",
        "func": "var dict = flow.get(\"pairs\");\nmsg.found = false;\ntry {\n    if (dict.hasOwnProperty(msg.originalMessage.from.id)) {\n        msg.found = true;\n        // console.log(\"found\");\n    }\n} catch(e) {\n    console.log(e.message);\n}\n// console.log(\"finally\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1120,
        "wires": [
            [
                "4053716215c9834a"
            ]
        ]
    },
    {
        "id": "8192fc288fc86244",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "build pairs dict",
        "func": "var dict = new Object();\nfor (var i = 0; i < msg.payload.length; i++) {\n    dict[msg.payload[i].fields.utid] = new Object();\n    dict[msg.payload[i].fields.utid].id = msg.payload[i].id;\n    dict[msg.payload[i].fields.utid].name = msg.payload[i].fields[\"Full Name\"];\n    dict[msg.payload[i].fields.utid].signups = msg.payload[i].fields[\"Activity (from Activity Signups)\"];\n    dict[msg.payload[i].fields.utid].bpt = msg.payload[i].fields[\"BPT Status\"];\n    dict[msg.payload[i].fields.utid].kpt = msg.payload[i].fields[\"Kayaking Proficiency\"];\n    dict[msg.payload[i].fields.utid].spt = msg.payload[i].fields[\"Skating Proficiency\"];\n    dict[msg.payload[i].fields.utid].wpt = msg.payload[i].fields[\"WPT Status\"];\n    \n}\n// console.log(\"here\");\n// console.log(JSON.stringify(dict));\nflow.set(\"pairs\", dict);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 100,
        "wires": [
            [
                "489c627c1c437231"
            ]
        ]
    },
    {
        "id": "4053716215c9834a",
        "type": "switch",
        "z": "ce49487b198a0e71",
        "name": "found?",
        "property": "found",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": true,
        "outputs": 2,
        "x": 590,
        "y": 1120,
        "wires": [
            [
                "31f82aa861a8540e"
            ],
            [
                "b1aaa172e162ef0a"
            ]
        ]
    },
    {
        "id": "568927e1270ea335",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "welcome",
        "message": [
            {
                "message": "Welcome, "
            },
            {
                "message": "Hello, "
            },
            {
                "message": "Howdy, "
            }
        ],
        "language": "none",
        "x": 1020,
        "y": 460,
        "wires": [
            [
                "831adeafc6269103"
            ]
        ]
    },
    {
        "id": "3a68be5fa9c1e998",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "request commands",
        "links": [
            "1daeaacca532cc6d"
        ],
        "x": 1315,
        "y": 460,
        "wires": []
    },
    {
        "id": "831adeafc6269103",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "add name from dict",
        "func": "var dict = flow.get(\"pairs\");\nmsg.payload.content += dict[msg.originalMessage.from.id].name + \"!\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 460,
        "wires": [
            [
                "3a68be5fa9c1e998"
            ]
        ]
    },
    {
        "id": "bd100e924fd442fa",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "sign up prompt",
        "message": [
            {
                "message": "Hello {{firstName}}! Welcome to the SMUXploration Crew Bot! It seems like this is your first time, [please tap here to sign up](https://airtable.com/shrVCvhRsH701DBdl).\n\nThis is your unique Telegram code (do not share it with anyone!):"
            }
        ],
        "language": "none",
        "x": 1100,
        "y": 1420,
        "wires": [
            [
                "1a2886c7489dc098"
            ]
        ]
    },
    {
        "id": "1a2886c7489dc098",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "tele code",
        "message": [
            {
                "message": "```{{userId}}```"
            }
        ],
        "language": "none",
        "x": 1260,
        "y": 1420,
        "wires": [
            [
                "9b01e19c9dfe3155"
            ]
        ]
    },
    {
        "id": "36e84837281774bf",
        "type": "chatbot-params",
        "z": "ce49487b198a0e71",
        "name": "add markdown",
        "params": [
            {
                "platform": "telegram",
                "name": "parseMode",
                "value": "Markdown"
            },
            {
                "platform": "telegram",
                "name": "disableWebPagePreview",
                "value": true
            }
        ],
        "outputs": 1,
        "x": 1560,
        "y": 1420,
        "wires": [
            [
                "e4e574687dc6e3de"
            ]
        ]
    },
    {
        "id": "e4e574687dc6e3de",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "sign up end point",
        "links": [],
        "x": 1715,
        "y": 1420,
        "wires": []
    },
    {
        "id": "b2cc1fd8d4ac46ab",
        "type": "link in",
        "z": "ce49487b198a0e71",
        "name": "get user info",
        "links": [
            "044e02b5716b9bc8"
        ],
        "x": 915,
        "y": 460,
        "wires": [
            [
                "568927e1270ea335"
            ]
        ]
    },
    {
        "id": "4c55beae6286c1f7",
        "type": "debug",
        "z": "ce49487b198a0e71",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 880,
        "wires": []
    },
    {
        "id": "b73fad9b9285ce66",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "logger function",
        "func": "msg.payload = JSON.stringify(msg.originalMessage, null, \" | \");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 880,
        "wires": [
            [
                "4c55beae6286c1f7"
            ]
        ]
    },
    {
        "id": "eef2b59f7ba25957",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "select params",
        "func": "msg.payload = {\"fields\":[\"utid\", \"Full Name\",\"Activity (from Activity Signups)\",\"BPT Status\", \"Kayaking Proficiency\", \"Skating Proficiency\", \"WPT Status\"],\"filterByFormula\":\"NOT({utid} = '')\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 100,
        "wires": [
            [
                "ac31d37f1a61177e"
            ]
        ]
    },
    {
        "id": "ad489de7409c5700",
        "type": "chatbot-rules",
        "z": "ce49487b198a0e71",
        "name": "refresh?",
        "rules": [
            {
                "type": "command",
                "command": "/refresh"
            },
            {
                "type": "catchAll"
            }
        ],
        "outputs": 2,
        "x": 260,
        "y": 1120,
        "wires": [
            [
                "51aecabab784a917"
            ],
            [
                "cff5a92424e861fd"
            ]
        ]
    },
    {
        "id": "51aecabab784a917",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "",
        "links": [
            "015ea5e5b8761995",
            "272c3b122f11fdcb"
        ],
        "x": 375,
        "y": 1060,
        "wires": []
    },
    {
        "id": "ec96d1faab3be10c",
        "type": "inject",
        "z": "ce49487b198a0e71",
        "name": "initialise",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"fields\":[\"Activity Type\",\"Activity Location\",\"Start Date Time\",\"edmlink\",\"uaid\"],\"filterByFormula\":\"{isopen}='1'\"}",
        "payloadType": "json",
        "x": 260,
        "y": 260,
        "wires": [
            [
                "0b8d9d8836ffc804"
            ]
        ]
    },
    {
        "id": "0b8d9d8836ffc804",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "select params",
        "func": "// msg.payload = {\"fields\":[\"Activity Type\",\"Activity Location\",\"Start Date Time\",\"EDM Link\",\"uaid\",\"Activity Signups\",\"Required Proficiencies\"],\"filterByFormula\":\"{Status}='Registration Open'\"};\nmsg.payload = {\"fields\":[\"Conducting Team\",\"Activity Type\",\"Activity Location\",\"Start Date Time\",\"EDM Link\",\"uaid\",\"Activity Signups\",\"Required Proficiencies\",\"Status\"],\"filterByFormula\":\"OR({Status} = 'Registration Open', {Status}='Registration Closed')\"};\n\n//msg.payload = {\"fields\":[\"Name\",\"Gender\",\"Team\"],\"filterByFormula\":\"{utid}='\"+userId+\"'\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 260,
        "wires": [
            [
                "ac1ae3170d1b839d"
            ]
        ]
    },
    {
        "id": "ac1ae3170d1b839d",
        "type": "airtable out",
        "z": "ce49487b198a0e71",
        "airtable": "10cb1b39c1f5f855",
        "operation": "select",
        "outputType": "array",
        "table": "Activities",
        "name": "Get activity records",
        "x": 630,
        "y": 260,
        "wires": [
            [
                "fab806c0593b6163",
                "272e48ac986af966"
            ]
        ]
    },
    {
        "id": "272e48ac986af966",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "build activities dict",
        "func": "var dict = {};\nfor (var i = 0; i < msg.payload.length; i++) {\n    var key = msg.payload[i].fields.uaid;\n    dict[key] = {};\n    dict[key].team = msg.payload[i].fields[\"Conducting Team\"]\n    dict[key].dt = msg.payload[i].fields[\"Start Date Time\"];\n    dict[key].at = msg.payload[i].fields[\"Activity Type\"];\n    dict[key].al = msg.payload[i].fields[\"Activity Location\"];\n    dict[key].edm = msg.payload[i].fields.edmlink;\n    dict[key].id = \"rec\" + key;\n    dict[key].signups =  msg.payload[i].fields[\"Activity Signups\"];\n    dict[key].prof =  msg.payload[i].fields[\"Required Proficiencies\"];\n    dict[key].open =  msg.payload[i].fields[\"Status\"] == \"Registration Open\";\n}\n// console.log(\"here\");\n// console.log(JSON.stringify(dict));\nflow.set(\"activities\", dict);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 260,
        "wires": [
            [
                "47ebc7454c6b0705",
                "d5aab568d07335fe"
            ]
        ]
    },
    {
        "id": "fab806c0593b6163",
        "type": "debug",
        "z": "ce49487b198a0e71",
        "name": "bar",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 360,
        "wires": []
    },
    {
        "id": "d5aab568d07335fe",
        "type": "change",
        "z": "ce49487b198a0e71",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "activities",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 260,
        "wires": [
            [
                "a9b48d46282d3f51"
            ]
        ]
    },
    {
        "id": "a9b48d46282d3f51",
        "type": "debug",
        "z": "ce49487b198a0e71",
        "name": "view flow.activities",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 260,
        "wires": []
    },
    {
        "id": "47ebc7454c6b0705",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "build activities list",
        "func": "var str = \"*Activities available:*\\n\\n\";\nvar a = flow.get(\"activities\");\nfor (const key in a) {\n    str += a[key].team + \" | [Details](\" + a[key].edm + \")\\n\";\n    str += a[key].at + \" @ \" + a[key].al + \"\\n\";\n    date = new Date(a[key].dt);\n    str += date.toLocaleString('en-us', {weekday:'long'}) + \" \" + date.toLocaleDateString() + \" \" + date.toLocaleTimeString() + \"\\n\";\n    str += \"/join\\\\_\" +key + \"\\n\\n\";\n}\nmsg.payload = str.trim();\nflow.set(\"alist\", str);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 200,
        "wires": [
            [
                "61d2bdc6a81b6bf5"
            ]
        ]
    },
    {
        "id": "61d2bdc6a81b6bf5",
        "type": "debug",
        "z": "ce49487b198a0e71",
        "name": "view flow.alist",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 200,
        "wires": []
    },
    {
        "id": "14f5ecabd62e1a9f",
        "type": "chatbot-params",
        "z": "ce49487b198a0e71",
        "name": "add markdown",
        "params": [
            {
                "platform": "telegram",
                "name": "parseMode",
                "value": "Markdown"
            },
            {
                "platform": "telegram",
                "name": "disableWebPagePreview",
                "value": true
            }
        ],
        "outputs": 1,
        "x": 2560,
        "y": 880,
        "wires": [
            [
                "2d3efe6758e51dbe"
            ]
        ]
    },
    {
        "id": "b948cec75df325d1",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "tailor activity list",
        "func": "var alist = flow.get(\"alist\");\n//replace join links with \"signed up\" if the user has already signed up\nvar usersignups = flow.get(\"pairs\")[msg.originalMessage.from.id].signups;\nif (usersignups != null) {\n    for (var i = 0; i < usersignups.length; i++) {\n        var tofind = \"/join\\\\_\" + usersignups[i].replace(\"rec\", \"\");\n        alist = alist.replace(tofind, \"_Signed up_\");\n        // console.log(tofind);\n    }\n}\n\nvar a = flow.get(\"activities\");\n//replace join links with \"registration closed\" if registration is closed\nfor (const aName in a) {\n    if (!a[aName].open) {\n        var tofind3 = \"/join\\\\_\" + aName;\n        alist = alist.replace(tofind3, \"_Signups closed_\");\n    }\n}\n\n//replace join links with required proficiencies if absent\n//get user's proficiences (values are either undefined, or an array of 1 object)\nvar bpt = flow.get(\"pairs\")[msg.originalMessage.from.id].bpt;\nvar kpt = flow.get(\"pairs\")[msg.originalMessage.from.id].kpt;\nvar spt = flow.get(\"pairs\")[msg.originalMessage.from.id].spt;\nvar wpt = flow.get(\"pairs\")[msg.originalMessage.from.id].wpt;\n\n//iterate through activities to check proficiency matches\nfor (const key in a) {\n    //iterate through proficiency list\n    for (var j = 0; j < a[key].prof.length; j++) {\n        //for each proficiency required, if the user does not have it, add it to the prompt.\n        var prompt = \"Signing up requires:\";\n        var missing = \"\";\n        switch (a[key].prof[j]) {\n            case \"None\":\n                //do nothing if there are no profs required\n                break;\n            case \"BPT\":\n                if (bpt == null) { missing = \" /bikingproficiency\"; }\n                break;\n            case \"Kayaking\":\n                if (kpt == null) { missing = \" /kayakingproficiency\"; }\n                break;\n            case \"Skating\":\n                if (spt == null) { missing = \" /skatingproficiency\"; }\n                break;\n            case \"WPT\":\n                if (wpt == null) { missing = \" /waterproficiency\"; }\n                break;\n        }\n        prompt += missing;\n    }\n    //replace join link with prompt if it is unchanged\n    if (prompt != \"Signing up requires:\") {\n        var tofind2 = \"/join\\\\_\" + key;\n        alist = alist.replace(tofind2, prompt);\n    }\n    \n    //goes to next activity\n}\n\nmsg.payload.content += alist;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2360,
        "y": 880,
        "wires": [
            [
                "14f5ecabd62e1a9f",
                "913dcfbd3e831ca3"
            ]
        ]
    },
    {
        "id": "32c2d1b05d2ded3e",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "",
        "func": "var activities = flow.get(\"activities\");\nmsg.activityStatus = 0; //0 = not found, 1 = open, 2 = closed\nif (activities.hasOwnProperty(msg.commandParams)) { //check if such activity exists\n    //check if activity is open for registration\n    if (activities[msg.commandParams].open) {\n        msg.activityStatus = 1;\n    } else {\n        msg.aName = activities[msg.commandParams].at //get the name of the activity\n        msg.activityStatus = 2;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 660,
        "wires": [
            [
                "c45f832c9d0ac1c7"
            ]
        ]
    },
    {
        "id": "9a17312c1143c1b4",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "unrecognised command",
        "info": "",
        "x": 1480,
        "y": 700,
        "wires": []
    },
    {
        "id": "e9bf6b99d0199706",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "success",
        "message": [
            {
                "message": "Sign up success!"
            }
        ],
        "language": "none",
        "x": 2840,
        "y": 1020,
        "wires": [
            [
                "687f5203d955bd74",
                "8e05c31296168a5b"
            ]
        ]
    },
    {
        "id": "913dcfbd3e831ca3",
        "type": "debug",
        "z": "ce49487b198a0e71",
        "name": "bar",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2510,
        "y": 940,
        "wires": []
    },
    {
        "id": "0c6ab0be2920935f",
        "type": "debug",
        "z": "ce49487b198a0e71",
        "name": "foo",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2790,
        "y": 960,
        "wires": []
    },
    {
        "id": "675eb0d93680b407",
        "type": "airtable out",
        "z": "ce49487b198a0e71",
        "airtable": "10cb1b39c1f5f855",
        "operation": "create",
        "outputType": "array",
        "table": "Activity Signups",
        "name": "add sign up",
        "x": 2650,
        "y": 1020,
        "wires": [
            [
                "0c6ab0be2920935f",
                "e9bf6b99d0199706"
            ]
        ]
    },
    {
        "id": "b1e4926bc5d068c2",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "sign up for activity",
        "func": "var idpairs = flow.get(\"pairs\");\nvar partid = idpairs[msg.originalMessage.from.id].id;\nconsole.log(partid);\nconsole.log(msg.commandParams);\nmsg.payload = {\"Activity\": [\"rec\" + msg.commandParams], \"Participant Name\": [partid]};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2430,
        "y": 1020,
        "wires": [
            [
                "675eb0d93680b407"
            ]
        ]
    },
    {
        "id": "95952c0626f3de2a",
        "type": "catch",
        "z": "ce49487b198a0e71",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 2090,
        "y": 480,
        "wires": [
            [
                "a23f43e93903da5f"
            ]
        ]
    },
    {
        "id": "a23f43e93903da5f",
        "type": "debug",
        "z": "ce49487b198a0e71",
        "name": "error found!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2290,
        "y": 460,
        "wires": []
    },
    {
        "id": "349dfde6d20d6325",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "check if user already in",
        "func": "msg.already = false;\n// var userrecid = flow.get(\"pairs\")[msg.originalMessage.from.id].id //get user's record id\nvar usersignups = flow.get(\"pairs\")[msg.originalMessage.from.id].signups; //get list of all signups for user\nvar activitysignups = flow.get(\"activities\")[msg.commandParams].signups; //get list of all signups for activity\n\n//if either user or activity has no signups, skip the check\nif (usersignups == null || activitysignups == null) {\n    return msg;\n}\n\n// //iterate and compare all user's signups and activity's signups\n// for (var i = 0; i < usersignups.length; i++) {\n//     for (var j = 0; j < activitysignups.length; j++) {\n//         console.log(usersignups[i] + \" vs \" + activitysignups[j]);\n//         if (usersignups[i] == activitysignups[j]) {\n//             msg.already = true;\n//             return msg;\n//         }\n//     }\n// }\n//iterate through all of user's signups. if there is a match with the commandParams, then reject the signup.\nvar toCompare = \"rec\" + msg.commandParams; //adds rec to the command params so it can be compared with the signup list\nfor (var i = 0; i < usersignups.length; i++) {\n    console.log(usersignups[i] + \" vs \" + toCompare);\n    if (usersignups[i] == toCompare) {\n        msg.already = true;\n        return msg;\n    } \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 1020,
        "wires": [
            [
                "536fd138a659b593"
            ]
        ]
    },
    {
        "id": "1fa80d7663acb7a1",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "activity open",
        "info": "",
        "x": 1990,
        "y": 980,
        "wires": []
    },
    {
        "id": "bf9396fb08cebecc",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "activity not open",
        "info": "",
        "x": 2000,
        "y": 1100,
        "wires": []
    },
    {
        "id": "536fd138a659b593",
        "type": "switch",
        "z": "ce49487b198a0e71",
        "name": "",
        "property": "already",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": true,
        "outputs": 2,
        "x": 2210,
        "y": 1020,
        "wires": [
            [
                "b1e4926bc5d068c2"
            ],
            [
                "060466cc2c058d96"
            ]
        ]
    },
    {
        "id": "060466cc2c058d96",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "already signed up!",
        "message": [
            {
                "message": "You have already signed up for this activity! If you wish to withdraw from the activity, please contact the Team's exco."
            }
        ],
        "language": "none",
        "x": 2430,
        "y": 1080,
        "wires": [
            [
                "019ec0e431a666d9"
            ]
        ]
    },
    {
        "id": "019ec0e431a666d9",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "out",
        "links": [
            "c61e4ab1bf95a764"
        ],
        "x": 2595,
        "y": 1080,
        "wires": []
    },
    {
        "id": "8e05c31296168a5b",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "request refresh",
        "links": [
            "015ea5e5b8761995"
        ],
        "x": 2995,
        "y": 960,
        "wires": []
    },
    {
        "id": "1ccb2b72780cab89",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "userId to record",
        "func": "var userId = msg.originalMessage.from.id;\n// msg.payload = {\"fields\":[\"update link\"], \"filterByFormula\":\"{utid}='\"+userId+\"'\"};\n//make sure that only 1 is returned: the original record, where toUpdate is blank\nmsg.payload = {\"fields\":[\"Full Name\", \"Student ID\", \"Gender\", \"Date of Birth\", \"Nationality\", \"Home Address\", \"Telegram Handle\", \"Mobile Number\", \"School\", \"Year of Matriculation\", \"Academic Email\"], \"filterByFormula\":\"{utid}='\"+userId+\"'\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "2dfb69bf442ea594",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "refresher function",
        "info": "",
        "x": 260,
        "y": 40,
        "wires": []
    },
    {
        "id": "4ad2bac77468db4e",
        "type": "delay",
        "z": "ce49487b198a0e71",
        "name": "",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "x": 250,
        "y": 180,
        "wires": [
            [
                "eef2b59f7ba25957",
                "0b8d9d8836ffc804"
            ]
        ]
    },
    {
        "id": "ce53d75e5c19b459",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "/bikingproficiency",
        "links": [
            "b585969ac120096e"
        ],
        "x": 1035,
        "y": 1120,
        "wires": []
    },
    {
        "id": "43325c5190788891",
        "type": "debug",
        "z": "ce49487b198a0e71",
        "name": "Chat Log",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 960,
        "wires": []
    },
    {
        "id": "923d9741b3036dad",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "",
        "func": "username = msg.originalMessage.chat.username;\ntext = msg.originalMessage.text;\nmsg.payload = username + \" sent \" + text;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 960,
        "wires": [
            [
                "43325c5190788891"
            ]
        ]
    },
    {
        "id": "9b86fa92aa4850fe",
        "type": "airtable out",
        "z": "ce49487b198a0e71",
        "airtable": "10cb1b39c1f5f855",
        "operation": "select",
        "outputType": "array",
        "table": "Members",
        "name": "Get user record",
        "x": 1120,
        "y": 1680,
        "wires": [
            [
                "317f67a94817b659"
            ]
        ]
    },
    {
        "id": "3bce2d9d3c3bf06f",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "userId to record",
        "func": "var userId = msg.originalMessage.from.id;\nmsg.payload = {\"fields\":[\"bptbutton\"], \"filterByFormula\":\"{utid}='\"+userId+\"'\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1680,
        "wires": [
            [
                "9b86fa92aa4850fe"
            ]
        ]
    },
    {
        "id": "d0d99d814c6bcd08",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "/bikingproficiency",
        "info": "",
        "x": 860,
        "y": 1640,
        "wires": []
    },
    {
        "id": "b585969ac120096e",
        "type": "link in",
        "z": "ce49487b198a0e71",
        "name": "update",
        "links": [
            "ce53d75e5c19b459"
        ],
        "x": 795,
        "y": 1680,
        "wires": [
            [
                "3bce2d9d3c3bf06f"
            ]
        ]
    },
    {
        "id": "317f67a94817b659",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "get update link",
        "func": "if (msg.payload.length != 0) {\n    msg.userData = msg.payload[0];\n    msg.newUser = false;\n} else {\n    msg.newUser = true;\n}\n\nmsg.updateLink = msg.userData.fields.bptbutton.url;\n// console.log(msg.updateLink)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1680,
        "wires": [
            [
                "1f8c971e2c14edcf"
            ]
        ]
    },
    {
        "id": "1f8c971e2c14edcf",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "placeholder",
        "message": [
            {
                "message": "placeholder"
            }
        ],
        "language": "none",
        "x": 1490,
        "y": 1680,
        "wires": [
            [
                "6d98cb64768550a9"
            ]
        ]
    },
    {
        "id": "a034d2a7a9b895bb",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "update endpoint",
        "links": [
            "c61e4ab1bf95a764"
        ],
        "x": 2175,
        "y": 1680,
        "wires": []
    },
    {
        "id": "6d98cb64768550a9",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "craft message",
        "func": "msg.payload.content = \"[Tap here](\" + msg.updateLink + \") to indicate your biking proficiency.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1680,
        "wires": [
            [
                "d968e794c6c68304"
            ]
        ]
    },
    {
        "id": "d968e794c6c68304",
        "type": "chatbot-params",
        "z": "ce49487b198a0e71",
        "name": "add markdown",
        "params": [
            {
                "platform": "telegram",
                "name": "parseMode",
                "value": "Markdown"
            },
            {
                "platform": "telegram",
                "name": "disableWebPagePreview",
                "value": true
            }
        ],
        "outputs": 1,
        "x": 2060,
        "y": 1680,
        "wires": [
            [
                "a034d2a7a9b895bb"
            ]
        ]
    },
    {
        "id": "b0d0bacf0b5a540c",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "tailored activity list",
        "info": "",
        "x": 2370,
        "y": 840,
        "wires": []
    },
    {
        "id": "ccb467c2ff116b9d",
        "type": "airtable out",
        "z": "ce49487b198a0e71",
        "airtable": "10cb1b39c1f5f855",
        "operation": "select",
        "outputType": "array",
        "table": "Members",
        "name": "Get user record",
        "x": 1120,
        "y": 1780,
        "wires": [
            [
                "be3abbefcfba809e"
            ]
        ]
    },
    {
        "id": "faac82e5ac29543f",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "userId to record",
        "func": "var userId = msg.originalMessage.from.id;\nmsg.payload = {\"fields\":[\"kayakingbutton\"], \"filterByFormula\":\"{utid}='\"+userId+\"'\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1780,
        "wires": [
            [
                "ccb467c2ff116b9d"
            ]
        ]
    },
    {
        "id": "2c412f653683c408",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "/kayakingproficiency",
        "info": "",
        "x": 870,
        "y": 1740,
        "wires": []
    },
    {
        "id": "f7ae0f683c510214",
        "type": "link in",
        "z": "ce49487b198a0e71",
        "name": "update",
        "links": [
            "dabef4d0f7056c6f"
        ],
        "x": 795,
        "y": 1780,
        "wires": [
            [
                "faac82e5ac29543f"
            ]
        ]
    },
    {
        "id": "be3abbefcfba809e",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "get update link",
        "func": "if (msg.payload.length != 0) {\n    msg.userData = msg.payload[0];\n    msg.newUser = false;\n} else {\n    msg.newUser = true;\n}\n\nmsg.updateLink = msg.userData.fields.kayakingbutton.url;\n// console.log(msg.updateLink)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1780,
        "wires": [
            [
                "7e452049cc874dce"
            ]
        ]
    },
    {
        "id": "7e452049cc874dce",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "placeholder",
        "message": [
            {
                "message": "placeholder"
            }
        ],
        "language": "none",
        "x": 1490,
        "y": 1780,
        "wires": [
            [
                "7c10f153439a18d9"
            ]
        ]
    },
    {
        "id": "7c10f153439a18d9",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "craft message",
        "func": "msg.payload.content = \"[Tap here](\" + msg.updateLink + \") to indicate your kayaking proficiency.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1780,
        "wires": [
            [
                "d968e794c6c68304"
            ]
        ]
    },
    {
        "id": "2dcba3cf144dd8cb",
        "type": "airtable out",
        "z": "ce49487b198a0e71",
        "airtable": "10cb1b39c1f5f855",
        "operation": "select",
        "outputType": "array",
        "table": "Members",
        "name": "Get user record",
        "x": 1120,
        "y": 1880,
        "wires": [
            [
                "78043183c3faa351"
            ]
        ]
    },
    {
        "id": "0ddb2b958bbbb1d3",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "userId to record",
        "func": "var userId = msg.originalMessage.from.id;\nmsg.payload = {\"fields\":[\"skatingbutton\"], \"filterByFormula\":\"{utid}='\"+userId+\"'\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1880,
        "wires": [
            [
                "2dcba3cf144dd8cb"
            ]
        ]
    },
    {
        "id": "767e18fc1e466633",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "/skatingproficiency",
        "info": "",
        "x": 870,
        "y": 1840,
        "wires": []
    },
    {
        "id": "6b12b75c7e45edb7",
        "type": "link in",
        "z": "ce49487b198a0e71",
        "name": "update",
        "links": [
            "8d39d8edbcf5a4cf"
        ],
        "x": 795,
        "y": 1880,
        "wires": [
            [
                "0ddb2b958bbbb1d3"
            ]
        ]
    },
    {
        "id": "78043183c3faa351",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "get update link",
        "func": "if (msg.payload.length != 0) {\n    msg.userData = msg.payload[0];\n    msg.newUser = false;\n} else {\n    msg.newUser = true;\n}\n\nmsg.updateLink = msg.userData.fields.skatingbutton.url;\n// console.log(msg.updateLink)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1880,
        "wires": [
            [
                "237049f005ed356f"
            ]
        ]
    },
    {
        "id": "237049f005ed356f",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "placeholder",
        "message": [
            {
                "message": "placeholder"
            }
        ],
        "language": "none",
        "x": 1490,
        "y": 1880,
        "wires": [
            [
                "c1c824b11e042742"
            ]
        ]
    },
    {
        "id": "c1c824b11e042742",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "craft message",
        "func": "msg.payload.content = \"[Tap here](\" + msg.updateLink + \") to indicate your skating proficiency.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1880,
        "wires": [
            [
                "d968e794c6c68304"
            ]
        ]
    },
    {
        "id": "aad742083d0822a3",
        "type": "airtable out",
        "z": "ce49487b198a0e71",
        "airtable": "10cb1b39c1f5f855",
        "operation": "select",
        "outputType": "array",
        "table": "Members",
        "name": "Get user record",
        "x": 1120,
        "y": 1980,
        "wires": [
            [
                "6414cc822a41913b"
            ]
        ]
    },
    {
        "id": "dc3a5f63c77f54bd",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "userId to record",
        "func": "var userId = msg.originalMessage.from.id;\nmsg.payload = {\"fields\":[\"wptbutton\"], \"filterByFormula\":\"{utid}='\"+userId+\"'\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1980,
        "wires": [
            [
                "aad742083d0822a3"
            ]
        ]
    },
    {
        "id": "0debc868b5f4d3c6",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "/waterproficiency",
        "info": "",
        "x": 860,
        "y": 1940,
        "wires": []
    },
    {
        "id": "11608d51f723f61f",
        "type": "link in",
        "z": "ce49487b198a0e71",
        "name": "update",
        "links": [
            "a798e93020901278"
        ],
        "x": 795,
        "y": 1980,
        "wires": [
            [
                "dc3a5f63c77f54bd"
            ]
        ]
    },
    {
        "id": "6414cc822a41913b",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "get update link",
        "func": "if (msg.payload.length != 0) {\n    msg.userData = msg.payload[0];\n    msg.newUser = false;\n} else {\n    msg.newUser = true;\n}\n\nmsg.updateLink = msg.userData.fields.wptbutton.url;\n// console.log(msg.updateLink)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1980,
        "wires": [
            [
                "0842241518fab4de"
            ]
        ]
    },
    {
        "id": "0842241518fab4de",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "placeholder",
        "message": [
            {
                "message": "placeholder"
            }
        ],
        "language": "none",
        "x": 1490,
        "y": 1980,
        "wires": [
            [
                "9ab51116739ef9db"
            ]
        ]
    },
    {
        "id": "9ab51116739ef9db",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "craft message",
        "func": "msg.payload.content = \"[Tap here](\" + msg.updateLink + \") to indicate your swimming proficiency/SMU Water Proficiency Test Status.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1980,
        "wires": [
            [
                "d968e794c6c68304"
            ]
        ]
    },
    {
        "id": "dabef4d0f7056c6f",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "/kayakingproficiency",
        "links": [
            "f7ae0f683c510214"
        ],
        "x": 1035,
        "y": 1160,
        "wires": []
    },
    {
        "id": "8d39d8edbcf5a4cf",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "/skatingproficiency",
        "links": [
            "6b12b75c7e45edb7"
        ],
        "x": 1035,
        "y": 1200,
        "wires": []
    },
    {
        "id": "a798e93020901278",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "/waterproficiency",
        "links": [
            "11608d51f723f61f"
        ],
        "x": 1035,
        "y": 1240,
        "wires": []
    },
    {
        "id": "8d670304e47861ec",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "/proficiencies",
        "links": [
            "c9000e98c890f8d7"
        ],
        "x": 1035,
        "y": 1280,
        "wires": []
    },
    {
        "id": "c9000e98c890f8d7",
        "type": "link in",
        "z": "ce49487b198a0e71",
        "name": "",
        "links": [
            "8d670304e47861ec"
        ],
        "x": 795,
        "y": 2080,
        "wires": [
            [
                "f46d277999c00e86"
            ]
        ]
    },
    {
        "id": "d8835c2dcb54e682",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "/proficiencies",
        "info": "",
        "x": 850,
        "y": 2040,
        "wires": []
    },
    {
        "id": "f46d277999c00e86",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "get fields",
        "func": "var userId = msg.originalMessage.from.id;\nmsg.payload = {\"fields\":[\"BPT Status\", \"Kayaking Proficiency\", \"Skating Proficiency\", \"WPT Status\"], \"filterByFormula\":\"{utid}='\"+userId+\"'\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2080,
        "wires": [
            [
                "5b9df2a666ee7f85"
            ]
        ]
    },
    {
        "id": "5b9df2a666ee7f85",
        "type": "airtable out",
        "z": "ce49487b198a0e71",
        "airtable": "10cb1b39c1f5f855",
        "operation": "select",
        "outputType": "array",
        "table": "Members",
        "name": "Get user record",
        "x": 1120,
        "y": 2080,
        "wires": [
            [
                "fa6da40f5aa18129"
            ]
        ]
    },
    {
        "id": "3d41674d58a2262c",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "build display",
        "func": "var bpt = \"Not indicated\";\nvar kpt = \"Not indicated\";\nvar spt = \"Not indicated\";\nvar wpt = \"Not indicated\";\nif (msg.profs[\"BPT Status\"]) {bpt = msg.profs[\"BPT Status\"];}\nif (msg.profs[\"Kayaking Proficiency\"]) {kpt = msg.profs[\"Kayaking Proficiency\"];}\nif (msg.profs[\"Skating Proficiency\"]) {spt = msg.profs[\"Skating Proficiency\"];}\nif (msg.profs[\"WPT Status\"]) {wpt = msg.profs[\"WPT Status\"];}\n\nmsg.payload.content = \"*Your Proficiencies*\\n\"\n                     + \"\\nBiking Proficiency Test: \" + bpt\n                     + \"\\nKayaking Certification: \" + kpt\n                     + \"\\nSkating Proficiency: \" + spt\n                     + \"\\nSwim Proficiency: \" + wpt\n                     + \"\\n\\nUse the following commands to update the respective proficiencies:\"\n                     + \"\\n/bikingproficiency\"\n                     + \"\\n/kayakingproficiency\"\n                     + \"\\n/skatingproficiency\"\n                     + \"\\n/waterproficiency\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 2080,
        "wires": [
            [
                "d968e794c6c68304"
            ]
        ]
    },
    {
        "id": "fa6da40f5aa18129",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "store profs",
        "func": "msg.profs = msg.payload[0].fields\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 2080,
        "wires": [
            [
                "6c7f46aaccfe710e"
            ]
        ]
    },
    {
        "id": "6c7f46aaccfe710e",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "placeholder",
        "message": [
            {
                "message": "placeholder"
            }
        ],
        "language": "none",
        "x": 1490,
        "y": 2080,
        "wires": [
            [
                "3d41674d58a2262c"
            ]
        ]
    },
    {
        "id": "a59e06181ed4271e",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "create query",
        "func": "//converts sent text into a query to search the airtable\n// var studentId = msg.originalMessage.text;\n// msg.payload = {\"fields\":[\"onboardinglink\"], \"filterByFormula\":\"{Student ID}='\"+studentId+\"'\"};\nmsg.payload = {\"fields\":[\"onboardinglink\"], \"filterByFormula\":\"AND({Student ID} = '\"+msg.sid+\"', {Academic Email}='\"+msg.email+\"')\"};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1520,
        "wires": [
            [
                "71e0e991697aa778"
            ]
        ]
    },
    {
        "id": "71e0e991697aa778",
        "type": "airtable out",
        "z": "ce49487b198a0e71",
        "airtable": "10cb1b39c1f5f855",
        "operation": "select",
        "outputType": "array",
        "table": "Members",
        "name": "Get user record",
        "x": 1200,
        "y": 1520,
        "wires": [
            [
                "3f6bafe6e3e6e186"
            ]
        ]
    },
    {
        "id": "3f6bafe6e3e6e186",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "get onboard link",
        "func": "if (msg.payload.length != 0) {\n    msg.userData = msg.payload[0];\n    msg.newUser = false;\n    msg.updateLink = JSON.stringify(msg.userData.fields).split(\"\\\"\")[3];\n} else {\n    msg.newUser = true;\n}\n\n// console.log(msg.updateLink)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 1520,
        "wires": [
            [
                "049608d2f1674df0"
            ]
        ]
    },
    {
        "id": "c365fba42f632710",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "placeholder",
        "message": [
            {
                "message": "placeholder"
            }
        ],
        "language": "none",
        "x": 1810,
        "y": 1520,
        "wires": [
            [
                "acab21738d9f5d69"
            ]
        ]
    },
    {
        "id": "acab21738d9f5d69",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "craft message",
        "func": "msg.payload.content = \"Your records have been found! Please fill in the blanks in [this form](\" + msg.updateLink + \"), and input the Telegram Code from above.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 1520,
        "wires": [
            [
                "376e2a5df5b555b1"
            ]
        ]
    },
    {
        "id": "049608d2f1674df0",
        "type": "switch",
        "z": "ce49487b198a0e71",
        "name": "",
        "property": "newUser",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1600,
        "y": 1520,
        "wires": [
            [
                "c365fba42f632710"
            ],
            [
                "03709fc8ec917773"
            ]
        ]
    },
    {
        "id": "03709fc8ec917773",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "sign up prompt",
        "message": [
            {
                "message": "It seems like we do not have your records stored 🙁 No matter! Just sign up using [this link](https://airtable.com/shrVCvhRsH701DBdl).\n\nThis is your unique Telegram code (do not share it with anyone!):"
            }
        ],
        "language": "none",
        "x": 1820,
        "y": 1580,
        "wires": [
            [
                "aefd46da840cb4af"
            ]
        ]
    },
    {
        "id": "aefd46da840cb4af",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "tele code",
        "message": [
            {
                "message": "```{{userId}}```"
            }
        ],
        "language": "none",
        "x": 1980,
        "y": 1580,
        "wires": [
            [
                "376e2a5df5b555b1"
            ]
        ]
    },
    {
        "id": "376e2a5df5b555b1",
        "type": "chatbot-params",
        "z": "ce49487b198a0e71",
        "name": "add markdown",
        "params": [
            {
                "platform": "telegram",
                "name": "parseMode",
                "value": "Markdown"
            },
            {
                "platform": "telegram",
                "name": "disableWebPagePreview",
                "value": true
            }
        ],
        "outputs": 1,
        "x": 2260,
        "y": 1540,
        "wires": [
            [
                "a0f94bd17d4f9f75"
            ]
        ]
    },
    {
        "id": "a0f94bd17d4f9f75",
        "type": "link out",
        "z": "ce49487b198a0e71",
        "name": "sign up end point",
        "links": [],
        "x": 2415,
        "y": 1540,
        "wires": []
    },
    {
        "id": "a5ced491203b2965",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "record found",
        "info": "",
        "x": 1810,
        "y": 1460,
        "wires": []
    },
    {
        "id": "339545089903d0a8",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "record not found",
        "info": "",
        "x": 1820,
        "y": 1640,
        "wires": []
    },
    {
        "id": "c74447d42e53349b",
        "type": "switch",
        "z": "ce49487b198a0e71",
        "name": "",
        "property": "isOnboard",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 850,
        "y": 1460,
        "wires": [
            [
                "bd100e924fd442fa"
            ],
            [
                "a59e06181ed4271e"
            ]
        ]
    },
    {
        "id": "05b198095b9d05b3",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "command or random text",
        "info": "",
        "x": 1130,
        "y": 1380,
        "wires": []
    },
    {
        "id": "ccabc635501c493d",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "is student id , email",
        "info": "",
        "x": 1010,
        "y": 1560,
        "wires": []
    },
    {
        "id": "9b01e19c9dfe3155",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "onboard",
        "message": [
            {
                "message": "Alternatively, if you have previously joined SMUX for any activity, you will be able to link your Telegram account by sending your student ID and email address in the following format:\n\n<Student ID>,<Email>\ne.g.: 01234567,xiaoming.2021@sci.smu.edu.sg"
            }
        ],
        "language": "none",
        "x": 1400,
        "y": 1420,
        "wires": [
            [
                "36e84837281774bf"
            ]
        ]
    },
    {
        "id": "b1aaa172e162ef0a",
        "type": "function",
        "z": "ce49487b198a0e71",
        "name": "check if message is studentid , email",
        "func": "//split sent message by comma, looking for number , string\nmsg.isOnboard = false;\nvar text = msg.originalMessage.text;\nvar toCheck = text.split(\",\");\nif (!isNaN(toCheck[0]) && toCheck.length == 2) {//if the first part is a number\n    msg.isOnboard = true\n    msg.sid = toCheck[0];\n    msg.email = toCheck[1];\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1380,
        "wires": [
            [
                "c74447d42e53349b"
            ]
        ]
    },
    {
        "id": "f694f873539eafc4",
        "type": "comment",
        "z": "ce49487b198a0e71",
        "name": "activity not found",
        "info": "",
        "x": 2000,
        "y": 840,
        "wires": []
    },
    {
        "id": "061daa0343dc4fa1",
        "type": "chatbot-message",
        "z": "ce49487b198a0e71",
        "name": "activity closed",
        "message": [
            {
                "message": "Signups for {{aName}} are closed. Why not try something else? "
            }
        ],
        "language": "none",
        "x": 2000,
        "y": 1140,
        "wires": [
            [
                "b948cec75df325d1"
            ]
        ]
    }
]